import javax.ws.rs.GET;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

import javax.json.*;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

@Path("test")
public class Resource {
 
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public String getHello() {
			createStudent();
    	return "ich komme vom backend";
    }
    
    private static void createStudent() {
    	Student student = new Student();
    	student.setId(1);
    	student.setName("Tommas");
    	
    	String url = "jdbc:postgresql://localhost/test";
    	Properties props = new Properties();
    	props.setProperty("user","postgres");
    	props.setProperty("password","postgres");
    	props.setProperty("ssl","true");
    	try {
			Connection conn = DriverManager.getConnection(url, props);
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
    	try {
    	Class.forName("org.postgresql.Driver");
    } catch (ClassNotFoundException e) {
		System.out.println("asd");
		e.printStackTrace();
	}
    	EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistenceUnit");
    	EntityManager em = emf.createEntityManager();
    	em.getTransaction().begin();
    	em.persist(student);
    	em.getTransaction().commit();
    	em.close();
    }
}